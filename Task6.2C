pipeline {
    agent any
    
    environment {
        GIT_REPOSITORY = "https://github.com/MattMina04/Jenkinsfile.git"
        GIT_BRANCH = "main"

        EMAIL_ADDRESS = "awesomergamer500@gmail.com"

        BUILD_PATH = 'build'
        TEST_PATH = 'test'

        CPPCHECK_LOG = 'cppcheck.log'

        PRODUCTION_ENVIRONMENT = 'Mattprod'
        TESTING_ENVIRONMENT = 'Matttest'
    }

    stages {
        stage('Build') {
            steps {
                echo "Fetch source code"
                git branch: "${env.GIT_BRANCH}", url: "${env.GIT_REPOSITORY}"

                echo 'Build code with Gradle'
                // sh 'gradle clean build'
            }
        }

        stage('Unit and Integration Tests') {
            steps {
                echo 'Run unit tests generated with the Google Test framework'
                // sh "${env.TEST_PATH}/test.exe"

                mail to: "${env.EMAIL_ADDRESS}", subject: "[JENKINS] Successful test", body: "${currentBuild.rawBuild.log}"
            }
            post {
                failure {
                    mail to: "${env.EMAIL_ADDRESS}", subject: "[JENKINS] Failed test", body: "${currentBuild.rawBuild.log}"
                }
            }
        }

        stage('Code Analysis') {
            steps {
                echo 'Perform code analysis with Cppcheck'
                // sh "cppcheck --enable=all ${env.BUILD_PATH} 2> ${env.CPPCHECK_LOG}"
            }
        }

        stage('Security Scan') {
            steps {
                echo 'Security scan.'

                mail to: "${env.EMAIL_ADDRESS}", subject: "[JENKINS] Successful security scan", body: "${currentBuild.rawBuild.log}"
            }
            post {
                failure {
                    mail to: "${env.EMAIL_ADDRESS}", subject: "[JENKINS] Failed security scan", body: "${currentBuild.rawBuild.log}"
                }
            }
        }

        stage('Deploy to Staging') {
            steps {
                echo "Deploy the app to testing environment ${env.TESTING_ENVIRONMENT}"
            }
        }

        stage('Integration Tests on Staging') {
            steps {
                sleep(10)
            }
        }

        stage('Deploy to Production') {
            steps {
                echo "Deploy the app to production environment ${env.PRODUCTION_ENVIRONMENT}"
            }
        }
    }
}
